doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        title #{id} 
        style 
            include ../static/petition.css
            include ../static/signinup.css
        script(src="https://www.gstatic.com/firebasejs/8.3.1/firebase-app.js") 
        script(src="https://www.gstatic.com/firebasejs/8.3.1/firebase-firestore.js") 
        script(src="https://www.gstatic.com/firebasejs/8.3.1/firebase-auth.js") 
        script(src="https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js") 

        script(src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js")
    body 
        .main
            header 
                nav 
                    .logo 
                        h4 ISMpetition 
                        p Every Voice Matters  
            section#section 
                  
                    div#petitionTitle

                    div#reciptent

                    div#petition_by

                    div#description

                    
                    div#signingptn
                        button#sign_petition(onclick="document.getElementById('sign_ptn').style.display='block'") Sign Petition
                        div#total
                    div#link
                        button#copy_link(onclick="copyToClipboard('#link_to_ptn')") Copy                   
                        div#link_to_ptn
              

        <div id="sign_ptn" class="modal">
        <div class="modal-content animate">
            <form id="signin" style="border:1px solid #ccc">
            <div class="container">
                <h1>Sign Petition By Signing In</h1>
                <hr>
                <label for="email"><b>Email</b></label>
                <input type="text" placeholder="Enter Email" name="email" required>
                <label for="psw"><b>Password</b></label>
                <input type="password" placeholder="Enter Password" name="password" required>
                <div class="clearfix">
                <button type="button" onclick="getElementById('sign_ptn').style.display='none'" class="cancelbtn">Cancel</button>
                <button type="submit" class="signupbtn">Sign In</button>
                </div>
            </div>
            </form>
            button(onclick="sign_with_google()") Sign in with Google
        </div>
        </div>
        script 
            include ../static/firebaseConfig.js 
        script.
            var modal1 = document.getElementById('sign_ptn');

                window.onclick = function (event) {
                    if (event.target == modal1) {
                        modal1.style.display = "none";
                    }
                }         

        
        
        script.
            var id = document.title;
            console.log(id);
            
            var docRef = db.collection("Petition").doc(id);
            docRef.get().then((doc) => {
                if (doc.exists) {
                        document.getElementById('section').style.display = "flex";
                        var data = doc.data();
                        document.getElementById('petitionTitle').innerHTML = data.petitionTitle;
                        document.getElementById('reciptent').innerHTML = "Petition to : "+ data.reciptent;
                        document.getElementById('petition_by').innerHTML = "Petition by : "+ data.petition_by;
                        document.getElementById('description').innerHTML = data.description;
                        document.getElementById('total').innerHTML = data.signed_by.length;
                        var link = window.location.protocol + window.location.host  + "/petition/?id=" + id;
                        document.getElementById('link_to_ptn').innerHTML = link;         
                } 
                else 
                {
                    console.log("No such document!");
                    window.alert("No Such Petition Exist");
                }
            }).catch((error) => {
                  console.log("Error getting document:", error);
                  window.alert("Error getting document:", error);
            });
            
             // decoding Description       
            var input = document.getElementById('description').innerHTML;
            function htmlDecode(input){
            var e = document.createElement('div');
            e.innerHTML = input;
            return e.childNodes[0].nodeValue;
            }    
            document.getElementById('description').innerHTML = htmlDecode(input);
            //copy link
            function copyToClipboard(element) {
                var $temp = $("<input>");
                $("body").append($temp);
                $temp.val($(element).text()).select();
                document.execCommand("copy");
                $temp.remove();
                var link =  document.getElementById('link_to_ptn').innerHTML;
                document.getElementById('link_to_ptn').innerHTML = "--Copied--";
                setTimeout(() => {  document.getElementById('link_to_ptn').innerHTML = link; }, 1000);   
            }

        script.
          document
            .getElementById("signin")
            .addEventListener("submit", (event) => {
                console.log("1");
                event.preventDefault();
                const email = event.target.email.value;
                const password = event.target.password.value;
                firebase
                    .auth()
                    .signInWithEmailAndPassword(email, password)
                    .then(({ user }) => {
                        console.log("2");
                        var docRef = db.collection("Petition").doc(id);
                        return docRef.update({                    
                            signed_by: firebase.firestore.FieldValue.arrayUnion(user.email)
                        }).then(() => {
                            console.log("3");
                            console.log("Document successfully updated!");
                            location.reload();
                        })
                        .catch((error) => {
                            // The document probably doesn't exist.
                            console.log("Error updating document: ", error);
                        });
                    })
                    .then(() => {
                        console.log("4");
                        return firebase.auth().signOut();
                    })
                    .catch((error) => {
                        // Handle Errors here.
                        var errorCode = error.code;
                        var errorMessage = error.message;
                        // The email of the user's account used.
                        var email = error.email;
                        // The firebase.auth.AuthCredential type that was used.
                        var credential = error.credential;
                        // ...
                        window.alert(errorMessage);
                    });
                return false;
                });

        script.
            function sign_with_google(){
                var provider = new firebase.auth.GoogleAuthProvider();
                firebase
                    .auth()
                    .signInWithPopup(provider)
                    .then(({ user }) => {
                        var docRef = db.collection("Petition").doc(id);
                            return docRef.update({                    
                                signed_by: firebase.firestore.FieldValue.arrayUnion(user.email)
                            }).then(() => {
                                console.log("3");
                                console.log("Document successfully updated!");
                                location.reload();
                            })
                            .catch((error) => {
                                // The document probably doesn't exist.
                                console.log("Error updating document: ", error);
                            });

                    })
                    .then(() => {
                        return firebase.auth().signOut();
                    })
                   .catch((error) => {
                        // Handle Errors here.
                        var errorCode = error.code;
                        var errorMessage = error.message;
                        // The email of the user's account used.
                        var email = error.email;
                        // The firebase.auth.AuthCredential type that was used.
                        var credential = error.credential;
                        window.alert(errorMessage);
                        // ...
                    });
                }
        
 